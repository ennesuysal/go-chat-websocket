// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSenderUsername holds the string denoting the senderusername field in the database.
	FieldSenderUsername = "sender_username"
	// FieldReceiverUsername holds the string denoting the receiverusername field in the database.
	FieldReceiverUsername = "receiver_username"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldSendTime holds the string denoting the sendtime field in the database.
	FieldSendTime = "send_time"
	// FieldSeen holds the string denoting the seen field in the database.
	FieldSeen = "seen"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the message in the database.
	Table = "messages"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "messages"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_message"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldSenderUsername,
	FieldReceiverUsername,
	FieldMessage,
	FieldSendTime,
	FieldSeen,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "messages"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_message",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
