// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSurname holds the string denoting the surname field in the database.
	FieldSurname = "surname"
	// FieldToken holds the string denoting the token field in the database.
	FieldToken = "token"
	// FieldIsOnline holds the string denoting the isonline field in the database.
	FieldIsOnline = "is_online"
	// EdgeMessage holds the string denoting the message edge name in mutations.
	EdgeMessage = "message"
	// Table holds the table name of the user in the database.
	Table = "users"
	// MessageTable is the table the holds the message relation/edge.
	MessageTable = "messages"
	// MessageInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessageInverseTable = "messages"
	// MessageColumn is the table column denoting the message relation/edge.
	MessageColumn = "user_message"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldName,
	FieldSurname,
	FieldToken,
	FieldIsOnline,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUsername holds the default value on creation for the "username" field.
	DefaultUsername string
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultSurname holds the default value on creation for the "surname" field.
	DefaultSurname string
)
